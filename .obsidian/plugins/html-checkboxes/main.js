/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var x=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var I=(u,p)=>{for(var e in p)x(u,e,{get:p[e],enumerable:!0})},E=(u,p,e,t)=>{if(p&&typeof p=="object"||typeof p=="function")for(let a of C(p))!v.call(u,a)&&a!==e&&x(u,a,{get:()=>p[a],enumerable:!(t=b(p,a))||t.enumerable});return u};var L=u=>E(x({},"__esModule",{value:!0}),u);var T={};I(T,{default:()=>k});module.exports=L(T);var r=require("obsidian"),M={fixOnPaste:!0},k=class extends r.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new w(this.app,this)),this.registerEvent(this.app.workspace.on("editor-menu",(e,t,a)=>{e.addItem(s=>{s.setTitle("Add HTML checkbox").setIcon("check-square-2").onClick(async()=>{this.addCheckbox(t)})}),e.addItem(s=>{s.setTitle("Fix HTML checkboxes").setIcon("wrench").onClick(async()=>{this.fixCheckboxIds(t)})})})),this.addCommand({id:"add-html-checkbox",name:"Add HTML checkbox",editorCallback:async(e,t)=>{this.addCheckbox(e)}}),this.addCommand({id:"fix-checkbox-ids",name:"Fix HTML checkboxes",editorCallback:async(e,t)=>{this.fixCheckboxIds(e)}}),this.registerDomEvent(window,"click",async e=>{let t=e.target;if(t.localName=="input"&&t.type=="checkbox"&&t.id&&t.id.startsWith("hc-")){e.preventDefault();let a=this.app.workspace.getActiveFile(),s=t.closest(".internal-embed");if(s){let i=s.getAttribute("src")||"";a=this.app.metadataCache.getFirstLinkpathDest(i,"")}if(a instanceof r.TFile){await this.app.vault.process(a,l=>{let d=t.id,h=new RegExp('<input[^>]*?id="'+d+'"[^>]*?>');a&&a.extension=="canvas"&&(h=new RegExp('<input[^>]*?id=\\\\"'+d+'\\\\"[^>]*?>'));let n=l.match(h),f=l;if(n){let o=n[0],g=o.match(/data-task="."/),c=o;t.checked?(c=c.replace(" checked>",">").replace(" >",">"),g&&(c=c.replace(g[0],""))):c=c.replace(">"," checked>"),f=l.replace(o,c)}return f});let i=t.closest(".canvas-node-content");if(a.extension!="canvas"&&i){let l=this.app.workspace.getMostRecentLeaf();l instanceof r.WorkspaceLeaf&&await l.rebuildView()}}}}),this.registerDomEvent(window,"contextmenu",e=>{if(e.button==2){let t=e.target;if(t.localName=="input"&&t.type=="checkbox"&&t.id&&t.id.startsWith("hc-")){let a=new r.Menu;a.addItem(s=>s.setIcon("square").onClick(()=>{this.setStatus(" ",t)})),a.addItem(s=>s.setIcon("square-check").setTitle("x").onClick(()=>{this.setStatus("x",t)})),a.addItem(s=>s.setIcon("square-minus").setTitle("-").onClick(()=>{this.setStatus("-",t)})),a.addItem(s=>s.setIcon("x-square").setTitle("~").onClick(()=>{this.setStatus("~",t)})),a.addItem(s=>s.setIcon("square-slash").setTitle("/").onClick(()=>{this.setStatus("/",t)})),a.showAtMouseEvent(e),a.dom.classList.add("checkbox-menu")}}}),this.registerDomEvent(window,"paste",e=>{var t,a;if(this.settings.fixOnPaste){let s=((t=e.clipboardData)==null?void 0:t.getData("text"))||"",i=/(id="hc-)([^"]+)(\")/g;if(s==null?void 0:s.match(i)){let d;e.target&&(d=e.target.closest(".mod-inside-iframe")),d&&e.preventDefault();let h=(a=this.app.workspace.activeEditor)==null?void 0:a.editor;h&&this.fixCheckboxIds(h,d,s)}}})}onunload(){}async loadSettings(){this.settings=Object.assign({},M,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async addCheckbox(e){let t=e.lastLine(),a=e.getLine(t).length,s=e.getRange({line:0,ch:0},{line:t,ch:a}),l='<input id="'+this.generateNewId(s)+'" type="checkbox">';e.replaceSelection(l)}generateNewId(e){let t="hc-"+(Math.floor(Math.random()*9e3)+1e3);return e.match('id="'+t+'"')?this.generateNewId(e):t}generateFixedId(e,t,a){let s=new RegExp(t,"g"),i=e.match(s),l=this.app.workspace.getActiveFile();if(i&&i.length==1&&(l==null?void 0:l.extension)!="canvas")return t;{let d='id="hc-'+(Math.floor(Math.random()*9e3)+1e3)+'"';return i=e.match(d),i?this.generateFixedId(e,t,a+1):d}}async fixCheckboxIds(e,t,a){let s=e.lastLine(),i=e.getLine(s).length,l=e.getCursor("from"),d=e.getCursor("to"),h=e.getCursor();e.setSelection({line:0,ch:0},{line:s,ch:i});let n=e.getSelection(),f=/(id="hc-)([^"]+)(\")/g;if(t&&a){let c=e.getRange({line:0,ch:0},l),m=e.getRange(d,{line:s,ch:i});n=c+a+m,h.ch=h.ch+a.length}let o,g=this.app.workspace.getActiveFile();if(g&&g.extension=="canvas"){let c=await this.app.vault.cachedRead(g);f=/(id=\\"hc-)([^"]+)(\\")/g,o=c==null?void 0:c.match(f)}else o=n==null?void 0:n.match(f);if(o)for(let c of o){c=c.replaceAll('\\"','"');let m=this.generateFixedId(n,c,0);c!=m&&(n=n.replace(c,m))}e.setSelection({line:0,ch:0},{line:s,ch:i}),e.replaceSelection(n),s=e.lastLine(),i=e.getLine(s).length,h.line>=s&&h.ch>i?e.setCursor({line:s,ch:i}):e.setCursor(h),e.focus()}async setStatus(e,t){let a=this.app.workspace.getActiveFile(),s=t.closest(".internal-embed");if(s){let i=s.getAttribute("src")||"";a=this.app.metadataCache.getFirstLinkpathDest(i,"")}a instanceof r.TFile&&await this.app.vault.process(a,i=>{let l=t.id,d=new RegExp('<input[^>]*?id="'+l+'"[^>]*?>');a&&a.extension=="canvas"&&(d=new RegExp('<input[^>]*?id=\\\\"'+l+'\\\\"[^>]*?>'));let h=i.match(d)[0],n=h,f=new RegExp('data-task="'+e+'"'),o=h.match(/data-task="."/);a&&a.extension=="canvas"&&(o=h.match(/data-task=\\".\\"/));let g="";o&&(g=o[0]);let c=h.match(f),m='data-task="'+e+'"';return a&&a.extension=="canvas"&&(m='data-task=\\"'+e+'\\"'),e==" "?n=n.replace(g,"").replace(" checked>",">").replace(" >",">"):(o&&!c&&(n=n.replace(g,m)),!o&&t.checked&&(n=n.replace("checked",m+" checked")),!o&&!t.checked&&(n=n.replace(">"," "+m+" checked>"))),i.replace(h,n)})}},w=class extends r.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new r.Setting(e).setName("Automatically fix duplicated IDs on pasting").setDesc("If you copy and paste any HTML checkboxes, plugin will scan the file and fix any duplicated IDs. Be aware that pasting too many checkboxes at onse may be slow if this option is enabled.").addToggle(t=>t.setValue(this.plugin.settings.fixOnPaste).onChange(async a=>{this.plugin.settings.fixOnPaste=a,await this.plugin.saveSettings()}))}};

/* nosourcemap */